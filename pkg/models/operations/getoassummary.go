// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-api/speakeasy-client-sdk-go/v3/pkg/models/shared"
	"net/http"
)

type GetOASSummaryRequest struct {
	NamespaceName     string `pathParam:"style=simple,explode=false,name=namespace_name"`
	RevisionReference string `pathParam:"style=simple,explode=false,name=revision_reference"`
}

func (o *GetOASSummaryRequest) GetNamespaceName() string {
	if o == nil {
		return ""
	}
	return o.NamespaceName
}

func (o *GetOASSummaryRequest) GetRevisionReference() string {
	if o == nil {
		return ""
	}
	return o.RevisionReference
}

type GetOASSummaryResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Default error response
	Error *shared.Error
	// OK
	OASSummary *shared.OASSummary
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetOASSummaryResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetOASSummaryResponse) GetError() *shared.Error {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *GetOASSummaryResponse) GetOASSummary() *shared.OASSummary {
	if o == nil {
		return nil
	}
	return o.OASSummary
}

func (o *GetOASSummaryResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetOASSummaryResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
